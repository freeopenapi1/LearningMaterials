1. 항과 연산자 
    1) 항(operand) : 연산에 사용되는 값
    2) 연산(operator) : 항을 이용하여 연산하는 기호 

2. 대입 연산자 (assignement operator)    
    1) 변수에 다른 변수나 값을 대입하는 연산자 
    2) 이항 연산자 중 우선 순위가 가장 낮은 연산자 
    3) 왼쪽 변수 = 오른쪽 변수(또는 식, 값)

3. 부호 연산자 
    1) 단항 연산자 
    2) 변수의 부호를 유지하거나(+) 바꿈(-)
    3) 실제 변수의 부호가 변하려면 대입 연사자를 사용해야 함 

4. 산술 연산자
    1) 사칙 연산자 
        +
        -
        *
        /       나누기 몫
        %       나머지 구하는 연산자, 숫자 n의 나머지 범위는 0~n-1

5. 복합 대입 연산자 
    1) 장점 : 코드가 간결해짐
    2) 대입 연산자와 다른 연산자가 함께 쓰임 
    3) +=
       -=
       *=
       /=
       %=
       <<=
       >>=
       >>>=
       &=

6. 비교 연산자  
    1) 관계 연산자, 이항 연산자 

       ==       두개 항의 값이 같으면 참, 아니면 거짓을 반환함 
       !=       두개 항의 다르면 참, 아니면 거짓을 반환함 
       <=
       >=
       <
       >

    2) 조건문, 반복문의 조건식으로 많이 사용 됨        
      
7. 증가, 감소 연산자 (증감 연산자)
    1) 단항연산자 
    2) 변수의 값을 1 더하거나 1 뺄때 사용 
    3) 연산자 
        ++      항의 값에 1을 더함
            - 예) val = ++num      // 먼저 num 값이 1 증가한 후 val 변수에 대입
                  val = num++      // val 변수에 기존 num 값을 먼저 대입한후, num값 1 증가  

        --      항의 값에서 1을 뺌

8. 논리 연산자 
    1) 관계 연산자와 혼합하여 많이 사용 됨 
    2) 연산의 결과 true, false으로 반환 됨 
    3) 종류
        - 논리 곱 (&&)
            - 두 항이 모두 참인 경우에만 결과 값이 참, 그렇지 않으면 거짓 
        - 논리 합 (||)
            - 두 항 중 하나의 항만 참이면 결과 값은 참, 두항이 모두 거짓이면 
              결과 값은 거짓임 
        - 부정 (!) 
            - 단항 연산자 
            - 참인 경우는 거짓으로, 거짓인 경우는 참으로 바꿈 
    4) Short circuit evaluation (단락 회로 평가)            
        - 논리 연산에서 모든 항이 실행되지 않는 경우 