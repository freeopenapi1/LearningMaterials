1. intro 
    1) 자바 제네릭(Generic)은 데이터 타입을 일반화하는 방법임 
    2) 제네릭을 사용하면 컬렉션, 메서드, 클래스, 인터페이스 등에서 사용하는 
       데이터 타입을 런타임 시에 결정할수 있음 

2. 제네릭 자료형(Type) 
    1) 클래스에서 사용하는 변수의 자료형이 여러 개 일수 있고,
       메서드는 자료형을 특정하지 않고, 추후 해당 클래스를 사용할 때
       지정할 수 있도록 선언.      
    2) 실제 사용하는 자료형의 변환은 컴파일러에 의해 검증되므로 
       안정적인 프로그램밍 방식.
        - 타입 안정성(type safety)을 보장

    3) 자료형 매개변수 T (type parameter) 
        - 이 클래스를 사용하는 시점에 실제 사용할 자료형을 지정 
        - 여러 알파벳을 의미에 따라 사용 가능
            - E : element
            - K : key
            - V : Value        
    
    4) 제네릭 멀티 타입 파라미터 
        - 제네릭 타입을 여러 개 선언하여 사용하는 것 

    5) <>
        - 다이아몬드 연산자 
        - ArrayList<String> arr = new ArrayList<>();  

3. <T extends 클래스>     
    1)  상위 클래스의 필요성
        - T 자료형의 범위를 제한 할수 있음 
        - 상위 클래스에서 선언하거나 정의하는 메서드를 활용할수 있음
        - 상속 받지 않는 경우 T는 Object로 변환되어 
          Object 클래스가 기본으로 제공하는 메서드만 사용가능 

4. 제네릭 메서드      
    1) 자료형 매개변수를 메서드의 매개변수나 반환 값으로 가지는 메서드   
    2) 제넥릭 클래스가 아니어도 내부에 제네릭 메서드는 구현하여 사용할수 있음 
    3) 형식
        public <자료형 매개변수> 반환형 메서드 이름(자료형 매개변수) {}

5. Quiz (정리)
    1) 자바에서 컬렉션 프레임워크에 저장하는 데이터 타입을 일반화하는 방법을 
       무엇이라고 하는가?
       - 제네릭(Generic)

    2) ArrayList에 영화 객체(Movie)만을 저장하기 위해서 <> 기호에 사용하는
       데이터타입의 객체를 생성하시오.   
       - ArrayList<Movie> list = new ArrayList<>();

    3) 키에는 문자열, 값에는 숫자를 저장하기 위해서 HashMap<K,V>을 만들때
       K와 V에 들어가는 타입을 작성하시오.
       - <String,Integer>

    4) 자바 제네릭을 사용하는 장점을 2가지정도 나열하시오.
       - 타입의 안전성 보장
       - 코드의 재사용성 높아짐                 