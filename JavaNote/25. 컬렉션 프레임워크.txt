1. 컬렉션 프레임워크 (Collection Framework)
    1) 자바에서 제공하는 데이터 구조인 컬렉션을 표현하는 
       인터페이스와 클래스들의 모음임
    2) 이 API를 사용하면 개발자가 데이터를 저장하고 관리하는 다양한 방법을 제공함 
    3) java.util 패키지에 구현되어 있음
    4) 최적화된 알고리즘을 사용할 수 있음 
    5) 활용에 대한 이해가 필요함 

2. Collection 인터페이스 
    1) 하나의 객체를 관리하기 위한 메서드가 선언된 인터페이스 
    2) 하위에 List와 Set 인터페이스가 있음

3. List 인터페이스 
    0) 순서가 있는 객체의 모음을 다루는 인터페이스 
    1) 객체를 순서에 따라 저장하고 관리하는데 필요한 메서드가 선언된 인터페이스 
             -----------
    2) 자료구조 리스트의 구현을 위한 인터페이스 
    3) 중복을 허용
       ----------
    4) ArrayList, LinkedList, Stack, Queue, Vector....   

4. Set 인터페이스 
    0) 순서와 관계없이 중복을 허용하지 않고 유일한 값을 관리하는데 
       -------------  ------------------
        필요한 메서드가 선언됨
    1) 아이디, 주민번호, 사번 등 관리하는 데 유용 
    2) 저장된 순서와 출력되는 순서는 다를수 있음
    3) HashSet, TreeSet....        

5. Map 인터페이스 
    0) 키-값 쌍의 객체를 다루는 인터페이스 
    1) 쌍(pair)으로 이루어진 객체를 관리하는데 사용하는 메서들이 선언된 인터페이스 
    2) 객체는 key-value의 쌍으로 이루어짐
    3) key는 중복을 허용하지 않음
       -------------------------
    4) HashTable, HashMap, Properties, TreeMap....     
    5) 객체의 유일성을 비교를 위해 equals()와 hashCode() 메서드를 구현해야 함   


6. Iterator 인터페이스 
    1) Collection 요소를 순회 
    2) 컬렉션 프레임워크에 저장된 요소들을 하나씩 차례로 참조하는 것 
    3) boolean hasNext()        
        - 이후에 요소가 더 있는지를 체크하는 메서드 
        - 요소가 있다면 true를 반환 
    4) E next() 
        - 다음에 있는 요소를 반환        

 7. ArrayList vs LinkedList
    1) 둘다 자료의 순차적 구조를 구현한 클래스 
    2) ArrayList는 배열을 구현한 클래스 
        - 논리적 순서와 물리적 순서가 동일함 

 8. HashSet 
    1) Set 인터페이스를 구현한 클래스 
    2) 멤버의 중복 여부를 체크하기 위해 인스턴스의 동일성을 확인해야 함
    3) 동일성 구현을 위해 필요에 따라 equals()와 hashCode() 메서드를 재정의함 

 9. TreeSet 
    1) SortedSet 인터페이스를 구현하는 클래스    
    2) 객체의 정렬에 사용하는 클래스 
    3) Set 인터페이스를 구현하여 중복을 허용하지 않고,
       오름차순이나 내림차순으로 객체를 정렬할수 있음 
    4) 내부적으로 이진검색트리로 구현됨 
    5) 이진검색트리에 저장하기 위해 각 객체를 비교해야 함 
    6) 비교 대상이 객체에 Comparable이나 Comparator 인터페이스를 구현해야
       TreeSet에 추가 될수 있음 
    7) String, Integer 등 JDK의 많은 클래스들이 이미 Comparable을 구현했음.   

