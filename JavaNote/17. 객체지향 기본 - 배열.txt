1. intro
    0) 자료 구조 (Data Structure)
        - 대량 데이터를 효율적으로 관리하는 메커니즘 
        - ex) 우편 번호, 
              인사자원부를 통한 인원 관리 

    1) 하나의 자료형  
        자료형 변수;
            int a;          //정수 한개
            Book b;         //책 한권
            String str;     //문자열 한개

    2) 여러 개의 자료형 
        자료형[] 변수;     
             ---
             배열자료형     

            int[] a;        //정수 여러 개
            Book[] b;       //책 여러 권 
            String[] str;   //문자열 여러 개

    3) 배열(Array)
        - 동일한 자료형의 순차적 자료 구조 
        - 1차원 구조의 메모리 공간 
        - 자료를 순차적으로 한꺼번에 관리하는 방법 
        - 물리적 위치와 논리적 위치가 동일 
        - 배열의 순서는 0부터 시작 
        - 자바에서 객체 배열을 구현한 ArrayList를 많이 활용함

2. 배열 선언과 초기화 
    1) 배열 선언
        - 자료형[] (참조)변수명 = new 자료형[개수];         <---권장
        - 자료형 (참조)변수명[] = new 자료형[개수]; 

3. 배열 사용하기 
    1) [] 인덱스 연산자 활용
        - 배열 요소가 저장된 메모리의 위치를 연산하여 찾아옴 
    2) 배열의 길이와 요소의 개수는 동일하지 않을수도 있음         

4. 객체 배열 사용하기 
    1) 객체 배열 선언과 구현
        - 기본 자료형 배열은 선언과 동시에 배열의 크기만큼의 메모리가 할당됨 
        - 객체 배열의 경우엔 요소가 되는 객체의 주소가 들어감(4바이트) 
          메모리만 할당됨.    
    2) 객체 배열 복사하기 
        - 얕은 복사 
            - 객체 주소만 복사되어 한쪽 배열의 요소를 수정하면 같이 수정됨 
            - 두 배열이 같은 객체를 가리킴
        - 깊은 복사           
            - 각각의 객체를 생성하여 그 객체의 값을 복사하여 
              배열이 서로 다른 객체를 가리키도록 함.

5. 배열 사용
    1) 메서드의 매개변수로 사용
    2) 메서드의 반환형으로 사용 
    3) main() 메서드의 매개변수 
        - JVM이 프로그램을 실행할 때 호출하는 메서드 
        - 메서드를 호출할때 인수를 넘겨주는 방식이 아님     

6. 2차원 배열 사용 
    1) 다차원 배열
        - 이차원 이상으로 구현된 배열 
        - 평면(이차원 배열)이나 공간(삼차원 배열)을 활용 
        - 예) int[][] arr = new arr[2][3];
              ---                  --- --  
              자료형              행개수 열개수      