1. 의미
    1) 어떤 조건이 성립되는 동안 반복 처리를 실행하는 제어문
    2) for문을 이용한 반복
       while문을 이용한 반복
       do~while문을 이용한 반복

2. for문 
    1) 일반적으로 반복하는 횟수가 정해진 경우에 사용 

              ①      ②       ④
        for(초기식; 조건식; 증감식) {
               반복할 문장;     <== 조건식이 거짓이면 탈출
                    ③        
        }        

            - 첫번째 루프(loop) 흐름
                - ① ② ③ ④
            - 두번째 루프(loop) 흐름    
                - ② ③ ④

            - 초기식은 처음 한번만 수행
            - 이후, 조건식 -> 반복할 문장 -> 증감식이 반복적으로 수행    


    2) 향상된 for문 (foreach문)
    
            배열에서 데이터를 하나씩 꺼내옴--끝까지
            -----------
        for(변수 : 배열) {
            반복할 문장;  
        }           
               
3. for문의 문장들 생략가능
    1) 초기화식 생략
        - 이미 이전에 값이 초기화 되어
          for 내부에서 값을 지정할 필요가 없는 경우         

    2) 조건식 생략
        - 반복 수행에 대한 조건이 수행문 내부에 있는 경우                  

    3) 증감식 생략
        - 증감식에 대한 연산이 복잡하거나 다른 변수의 연산 결과값에 결정하는 경우

    4) 무한 반복
        - for ( ; ; ) {
            
        }    

4. 중첩 반복문
    1) 반복문 내부에 또 다른 반복문이 있음 
    2) 여러 겹으로 반복문을 겹쳐서 구현 가능 
    3) 외부 반복문과 내부 반복문 간의 변수 값 변화에 유의해야함     

5. break문, continue문 
    1) break문
        - 감싸고 있는 제어문의 블록을 빠져 나오는 기능
        - 반복문에서는 주로 if문과 같이 사용하여 조건에 해당되는 경우
          반복 수행 멈추고 외부로 수행이 이동 
        - 여러 반복문이 중첩되어 있는 경우엔 break문이 포함되어 있는 반복문만 빠져나옴                               
    2) continue문 
        - 반복문에서는 주로 if문과 같이 사용하여 조건에 해당되는 경우
          이후 반복문 블록 내부의 다른 수행문들을 수행하지 않음        