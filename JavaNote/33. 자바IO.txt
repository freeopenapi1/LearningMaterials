1. 입출력 스트림 
    1) 네트워크에서 자료의 흐름이 물의 흐름과 같다는 비유에서 유래됨 
    2) 자바는 다양한 입출력 장치에 독립적으로 일관성있는 입출력 스트림을 통해 제공 
    3) 입출력이 구현되는 곳
        - 파일 디스크, 키보드, 마우스, 네트웍, 메모리 등 
          모든 자료가 입력되고 출력되는 곳 

2. 입출력 스트림의 구분 
    1) 대상 기준
        - 입력 스트림 
            - 대상으로부터 자료를 읽어 들이는 스트림 
            - 예) FileInputStream, FileReader, 
                  BufferedInputStream, BufferedReader
        - 출력 스트림 
            - 대상으로 자료를 출력하는 스트림 
            - 예) FileOutputStream, FileWriter, 
                  BufferedOutputStream, BufferedWriter  
    2) 자료의 종류 기준 
        - 바이트 스트림 
            - 동영상, 음악 파일, 실행 파일등의 자료를 읽고 쓸때 이용
            - 예) FileInputStream, FileOutputStream, 
                  BufferedInputStream, BufferedOutputStream
        - 문자 스트림 
            - 바이트 단위로 자료를 처리하면 문자는 깨짐.
            - 인코딩에 맞게 2바이트 이상으로 처리하도록 구현된 스트림 
            - 예) FileReader, FileWriter, 
                  BufferedReader, BufferedWriter 

    3) 기능 기준
        - 기반 스트림 
            - 대상에 직접 자료를 읽고 쓰는 기능의 스트림 
            - 예) FileInputStream, FileOutputStream,
                  FileReader, FileWriter
               
        - 보조 스트림 
            - 직접 읽고 쓰는 기능은 없이 추가적인 기능을 더해주는 스트림
            - 예) BufferedInputStream, BufferedOutputStream,
                  InputStreamReader, OutputStreamWriter

        - 기반 스트림 + 보조 스트림A + 보조 스트림B     
            - 보조 스트림은 직접 읽고 쓰는 기능은 없으므로 
              항상 기반 스트림이나 또 다른 보조 스트림을 
              생성자의 매개변수로 포함함  

3. 표준 입출력 스트림 
    1) System 클래스의 멤버 
        - System.out 
            - 표준 출력(모니터) 스트림               
        - System.in 
            - 표준 입력(키보드) 스트림     
        - System.err
            - 표준 에러 출력(모니터) 스트림

4. 바이트 단위 입출력 스트림 
    1) InputStream
        - 바이트 단위 입력 스트림 최상위 추상 클래스 
        - 하위 스트림이 상속받아 구현함 
        - 예) FileInputStream : 파일에서 바이트 단위로 자료를 읽음
              ByteArrayInputStream : byte 배열 메모리에서 바이트 단위로 자료를 읽음
              FilterInputStream : 기반 스트림에서 자료를 읽을 때
                                  추가 기능을 제공하는 보조 스트림의 상위 클래스
        - 주요 메서드 
            - int read() : 입력 스트림으로부터 한 바이트의 자료를 읽음.
                           읽은 자료의 바이트 수를 반환함  
            - int read(byte[] b) : 입력 스트림으로부터 b[] 크기의 자료를
                                   b[]에 읽음.
                                   읽은 자료의 바이트 수를 반환함  
            - int read(byte[] b, int off, int len)
                                 : 입력 스트림으로부터 b[] 크기의 자료를                                       
                                   b[]의 off변수 위치부터 저장하며 
                                   len 만큼 읽음. 
                                   읽은 자료의 바이트 수를 반환함           
            - void close() : 입력 스트림과 연결된 대상 리소스를 닫음     

    2) OutputStream
        - 바이트 단위 출력 스트림 최상위 추상 클래스 
        - 하위 스트림이 상속받아 구현함 
        - 예) FileOutputStream : 파일에서 바이트 단위로 자료를 씀
              ByteArrayOutputStream : byte 배열 메모리에서 바이트 단위로 자료를 씀
              FilterOutputStream : 기반 스트림에서 자료를 쓸 때
                                  추가 기능을 제공하는 보조 스트림의 상위 클래스

        - 주요 메서드 
            - void write(int b) : 한 바이트씩 출력함
            - void write(byte[] b) : b[] 크기의 자료를 출력함 
            - void write(byte[] b, int off, int len) 
                                   : b[] 크기의 자료를 off 위치부터 len 개수만큼
                                     자료를 출력함.
            - void flush() : 출력을 위해 잠시 자료가 머무리는 출력 버퍼를
                             강제로 비워 자료를 출력함 
            - void close() : 출력 스트림과 연결된 대상 리소스를 닫음.
                             출력 버퍼가 비워짐.                                                                 

5. 문자 단위 입출력 스트림 
    1) Reader
        - 문자 단위 입력 스트림 최상위 추상 클래스 
        - 이를 하위 스트림이 상속받아 구현함 
        - 예) FileReader : 파일에서 문자 단위로 읽는 스트림 클래스임 
              InputStreamReader : 바이트 단위로 읽은 자료를 문자로 변환해주는 
                                  보조 스트림 클래스임   
              BufferedReader : 문자로 읽을 때 배열을 제공하여 
                               한꺼번에 읽을 수 있는 기능을 제공하는 보조 스트림.

        - 주요 메서드 
            - int read() : 파일로부터 한 문자를 읽음. 읽은 문자를 반환함.
            - int read(char[] cbuf) : 파일로부터 cbuf 배열에 문자를 읽음.
            - int read(char[] cbuf, int off, int len) : 파일로부터 cbuf 배열에
                                    off 위치로부터 len 개수만큼의 문자를 읽음.
            - void close() : 입력 스트림과 연결된 대상 리소스를 닫음.   

    2) Writer
        - 문자 단위 출력 스트림 최상위 추상 클래스 
        - 이를 하위 스트림이 상속받아 구현함 
        - 예) FileWriter : 파일에서 문자 단위로 출력하는 스트림 클래스임 
              OutputStreamWriter : 바이트 단위의 자료를 문자로 변환해 출력해주는 
                                  보조 스트림 클래스임   
              BufferedWriter : 문자로 쓸때 배열을 제공하여 
                               한꺼번에 쓸수 있는 기능을 제공하는 보조 스트림.     
        - 주요 메서드 
            - void write(int c) : 한 문자를 파일에 출력함 
            - void write(char[] cbuf) : 문자 배열 cbuf의 내용을 출력함    
            - void write(char[] cbuf, int off, int len) :  문자 배열 cbuf의 
                                        off위치부터 len 개수만큼 출력함.                                                                                
            - void write(String str) : 문자열 str을 출력함 
            - void write(String str, int off, int len)  :  문자열 str의 
                                        off위치부터 len 개수만큼 출력함.
            - void flush() : 출력하기 전에 자료가 있는 공간(출력 버퍼)을 비워
                             출력하도록 함.
            - void close() : 스트림과 연결된 리소스를 닫음. 출력 버퍼도 비워짐.                                                                                                                           

6. 보조 스트림 클래스들 
    1) 보조 스트림 
        - 실제 읽고 쓰는 스트림이 아닌 보조 기능을 제공하는 스트림 
        - FilterInputStream, FilterOutputStream이 보조 스트림의 상위 스트림 클래스들
        - 생성자의 매개변수로 또 다른 스트림(기반 스트림이나 다른 보조 스트림)을
          가짐    
        - Decorator Pattern으로 구현 됨   
        - 생성자 
            - protected FilterInputStream(InputStream in)
                : 생성자의 매개변수로 InputStream을 받음.
            - public FilterOutputStream(OutputStream out)
                : 생성자의 매개변수로 OutputStream을 받음.

            - 예) 바이트 단위 파일 입력 스트림 + 문자로 변환기능 추가 + 버퍼링 기능 추가
                  --------------------------  -------------------   ---------------
                      기반스트림                  보조 스트림1           보조 스트림2
    
    2) InputStreamReader와 OutputStreamWriter
        - 바이트 단위로 읽거나 쓰는 자료를 문자로 변환해주는 보조 스트림 

    3) BufferedInputStream과 BufferedOutputStream
        - 약 8k의 배열이 제공되어 입출력이 빠르게 하는 기능이 제공되는 스트림 
        - BufferedReader와 BufferedWriter는 문자용 입출력 보조 스트림    

    4) DataInputStream과 DataOutputStream
        - 자료가 메모리에 저장된 상태 그대로 읽거나 쓰는 스트림 
        - DataInputStream 메서드 
            - byte readByte() : 1바이트을 읽어 반환             
            - char readChar() : 한 문자를 읽어 반환 
        - DataOutputStream 메서드 
            - void writeByte(int v) : 1바이트 자료를 출력
            - void writeChar(int v) : 2바이트를 출력             

7. 직렬화(Serialization)
    1) 인스턴스의 상태를 그대로 파일 저장하거나 네트웍으로 전송하고 (serialization)
       이를 다시 복원 (deserialization)하는 방식 
    
    2) 자바에서는 보조 스트림을 활용하여 직렬화를 제공함 
        - ObjectInputStream, ObjectOutputStream
            - 생성자
                - ObjectInputStream(InputStream in) 
                    : InputStream을 생성자의 매개변수로 받아 ObjectInputStream 객체 생성 
                - ObjectOutputStream(OutputStream out)
                    : OutputStream을 생성자의 매개변수로 받아 ObjectOutputStream 객체 생성
    
    3) Serializable 인터페이스 
        - 직렬화는 인스턴스의 내용이 외부로 유출되는 것이므로 
          프로그래머가 해당 객체에 대한 직렬화 의도를 표시해야 함
        - 구현코드가 없는 marker interface  
        - transient
            - 직렬화하지 않으려면 멤버 변수에 사용함 

8. File 클래스 
    1) 파일 개념을 추상화한 클래스 
    2) 입출력 기능은 없고, 파일의 이름, 경로, 읽기 전용 속성을 알수 있음 

9. Decorator Pattern
    1) 자바의 입출력 스트림은 decorator pattern임.
    2) 상속보다 유연한 구현 방식 
    3) 데코레이터는 다른 데코레이터나 또는 컴포넌트를 포함해야 함 
    4) 지속적인 기능의 추가와 제거가 용이함 


                                  