1. 내부 클래스 (inner class)
    1) 클래스 내부에 선언한 클래스 
    2) 내부 클래스를 감싸고 있는 외부 클래스와 inner class는
       밀접한 연관이 있는 경우가 많음.
    3) 다른 외부 클래스에서 사용할 일이 거의 없는 경우에 
       내부 클래스로 선언해서 사용함.
    4) = 중첩 클래스       
    5) 종류 
        - 인스턴스 내부 클래스
        - 정적(static) 내부 클래스 
        - 지역(local) 내부 클래스 
        - 익명(anonymous) 내부 클래스

2. 인스턴스 내부 클래스
    1) 내부적으로 사용할 클래스를 선언 (private으로 선언하는 것을 권장)
        - private이 아닌 내부 클래스는 다른 외부 클래스에서 생성할 수 있음.

    2) 외부 클래스가 생성된 후 인스턴스 내부 클래스가 생성됨 (정적 내부 클래스와 다름)

3. 정적(static) 내부 클래스   
    1) 외부 클래스 생성과 무관하게 사용할 수 있음 
    2) 정적 변수, 정적 메서드 사용 
    3) 일반 메서드                                      (사용가능여부)
        - 외부 클래스의 인스턴스 변수                         X 
        - 외부 클래스의 정적 변수                             o
        - 정적 내부 클래스의 인스턴스 변수                     o
        - 정적 내부 클래스의 정적 변수                         o
    4) 정적 메서드 
        - 외부 클래스의 인스턴스 변수                          X 
        - 외부 클래스의 정적 변수                              o
        - 정적 내부 클래스의 인스턴스 변수                      X
        - 정적 내부 클래스의 정적 변수                          o

4. 지역(local) 내부 클래스 
    1) 지역 변수와 같이 메서드 내부에서 정의하여 사용하는 클래스 
    2) 메서드의 호출이 끝나면 메서드에 사용된 지역변수의 유효성은 사라짐.
    3) 메서드 호출 이후에도 사용해야 하는 경우가 있을 수 있으므로 
       지역 내부 클래스에서 사용하는 메서드의 지역 변수나 매개 변수는 
       final로 선언됨  
    4) MyRunnable 클래스를 사용하기위해서 직접 생성하는 것이 아니고       
       getRunnable() 메서드를 호출하여 객체를 생성해야 함.

5. 익명(anonymous) 내부 클래스
    1) 이름이 없는 클래스 
        - 지역(local) 내부 클래스의 클래스 이름(MyRunnable)은 
          실제로 호출되는 경우가 없음.  
    2) 클래스의 이름을 생략하고 주로 하나의 인터페이스나 
       하나의 추상 클래스를 구현하여 반환 
    3) 인터페이스나 추상 클래스의 자료형의 (참조)변수에 직접 대입하여
       클래스를 생성하거나 지역 내부 클래스의 메서드 내부에서 생성하여 반환 할수 있음.                      
    4) 안드로이드 widget의 이벤트 핸들러에 주로 활용됨       