1. 객체지향 설계에서 언급하는 캡슐화는 무슨 의미일까요?
    1) 속성(데이터)과 메서드(연산)을 하나로 묶어서 클래스(객체)로 구성
    2) 가독성 향상, 유지보수 용이 
    3) 재사용성이 높은 S/W 개발 가능 
    4) 정보은닉으로 내부자료 일관성 유지 
       -------
    5) 객체간 인터페이스를 이용, 종속성 최소화 
    6) 정보은닉을 실현하는 방법        

2. 캡슐화와 정보은닉의 차이는 무엇인지요?
    1) 캡슐화 (Encapsulation)
        - 자료와 연산을 하나로 묶음 
        - 속성(변수)과 Function을 통합
        - data와 method를 하나의 객체 
        - 내/외부 경계  
        - 정보은닉을 실현하는 방법 

    2) 정보은닉 (Information Hiding)
        - 외부로부터 자료를 숨기는 것 
        - 객체 내부에 함부로 접근하지 못하게 하는 것 
        - 객체에 대한 구체적인 정보를 노출시키지 않도록 하는 것
        - Side effect를 최소화 
        - 고려되지 않은 외부 영향 최소화 

3. 객체지향의 다형성(Polymorphism)에 대해서 설명해보세요.

    1) overriding
        
        public class Rectangle extends Figure {

            public show(int width, int height) {
                int area = width * height 
                printf("사각형 넓이는 : " + area);
            }

        }

        public class Triangle extends Figure {

            public show(int width, int height) {
                int area = (width * height) / 2;
                printf("삼각형 넓이는 : " + area);
            }

        }        

    2) Overloading 

        public class Circle extends Figure {
            public show(int radius) {
                int area = π * radius^2
                printf("원의 넓이는 : " + area)
            }
        }


